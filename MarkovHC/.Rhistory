?group_by
nodes <- clusterings %>%
tidyr::gather(key = level, value = basin) %>%
group_by(level, basin) %>%
summarise(Size = n()) %>%
ungroup()
nodes
nodes <- clusterings %>%
tidyr::gather(key = level, value = basin) %>%
group_by(level, basin) %>%
summarise(Size = n()) %>%
ungroup() %>%
mutate(level = stringr::str_replace(level, "level", ""))
nodes
nodes <- clusterings %>%
tidyr::gather(key = level, value = basin) %>%
group_by(level, basin) %>%
summarise(Size = n()) %>%
ungroup() %>%
mutate(level = stringr::str_replace(level, "level", "")) %>%
mutate(level = level, basin = basin)
nodes
matrix(1:9,3,3)*matrix(1:9,3,3)
order(c(1.2,1,3,2,5,2.3))
order(c(1.2,1,3,2,5,2.3), decreasing = TRUE)
order(c(1.2,1,3,2,5,2.3), decreasing = FALSE)
load('F:\Projects\MarkovHC\results\simulationData\example3.RData')
load('F:/Projects/MarkovHC/results/simulationData/example3.RData')
MarkovObject <- MarkovHC_3
View(MarkovHC_3)
MarkovLevels <- 1:24
result.dataframe <- as.data.frame(1:nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]))
colnames(result.dataframe) <- 'index'
for (i in MarkovLevels) {
result.dataframe.temp <- data.frame(matrix(nrow = nrow(result.dataframe),
ncol = 2))
colnames(result.dataframe.temp) <- c('index', paste('level', as.character(i), sep = ''))
result.dataframe.temp$index <- 1:nrow(result.dataframe.temp)
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe.temp[basinj,2] <- basin
}
result.dataframe <- merge(result.dataframe, result.dataframe.temp, by='index')
}
orderResult <- result.dataframe
dim(result.dataframe)
View(result.dataframe)
install.packages('doBy')
library(doBy)
?orderBy
levels(factor(1:10))
test <- factor(orderResult, levels = 1:max(orderResult[,1]))
class(test)
result.dataframe <- as.data.frame(1:nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]))
colnames(result.dataframe) <- 'index'
for (i in MarkovLevels) {
result.dataframe.temp <- data.frame(matrix(nrow = nrow(result.dataframe),
ncol = 2))
colnames(result.dataframe.temp) <- c('index', paste('level', as.character(i), sep = ''))
result.dataframe.temp$index <- 1:nrow(result.dataframe.temp)
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe.temp[basinj,2] <- as.factor(basin, levels = 1:nrow(result.dataframe.temp))
}
result.dataframe <- merge(result.dataframe, result.dataframe.temp, by='index')
}
result.dataframe <- as.data.frame(1:nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]))
colnames(result.dataframe) <- 'index'
for (i in MarkovLevels) {
result.dataframe.temp <- data.frame(matrix(nrow = nrow(result.dataframe),
ncol = 2))
colnames(result.dataframe.temp) <- c('index', paste('level', as.character(i), sep = ''))
result.dataframe.temp$index <- 1:nrow(result.dataframe.temp)
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe.temp[basinj,2] <- factor(basin, levels = 1:nrow(result.dataframe.temp))
}
result.dataframe <- merge(result.dataframe, result.dataframe.temp, by='index')
}
orderResult <- result.dataframe
class(orderResult[1,1])
result.dataframe <- as.data.frame(1:nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]))
colnames(result.dataframe) <- 'index'
for (i in MarkovLevels) {
result.dataframe.temp <- data.frame(matrix(nrow = nrow(result.dataframe),
ncol = 2))
colnames(result.dataframe.temp) <- c('index', paste('level', as.character(i), sep = ''))
result.dataframe.temp$index <- 1:nrow(result.dataframe.temp)
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe.temp[basinj,2] <- basin
}
result.dataframe <- merge(result.dataframe, result.dataframe.temp, by='index')
}
orderResult <- result.dataframe
class(orderResult)
class(orderResult[1,1])
test = orderBy(~level24+level23, orderResult)
View(test)
View(orderResult)
View(test)
test2 = split(orderResult,orderResult$level24)
View(test2)
View(test2)
test2=split(test,test$level24)
View(test2)
View(test2)
test2=split(orderResult,orderResult$level24)
View(test2)
test <- orderBy(~level24+level23, orderResult)
View(test)
as.formula('~level24+level23')
test <- orderBy(~level24+level23+level22+level21+level20, orderResult)
View(test)
View(test)
orderLevels <- 1:5
orderLevels <- paste('level',orderLevels)
orderLevels
orderLevels <- paste('level',orderLevels,sep="")
orderLevels
orderLevels <- 1:5
orderLevels <- paste('level',orderLevels,sep="")
orderLevels
length(orderLevels)
orderLevels <- paste(orderLevels, collapse = '+')
orderLevels
orderLevels <- paste('~',orderLevels, sep = '')
orderLevels
orderLevels <- 1:24
orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]
orderLevels
orderLevels <- paste('level',orderLevels,sep='')
orderLevels
orderLevels <- paste(orderLevels, collapse = '+')
orderLevels
orderLevels <- paste('~',orderLevels, sep = '')
orderLevels
orderResult <- result.dataframe
test <- orderBy(as.formula(orderLevels), orderResult)
View(test)
View(test)
orderLevels <- 1:5
orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]%>%
#orderLevels <- paste('level',orderLevels,sep='')
paste('level',sep='')%>%
paste(orderLevels, collapse = '+')
orderLevels
orderLevels <- 1:5
orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]
orderLevels
orderLevels <- paste('level',.,sep='')%>%
paste(., collapse = '+')%>%
paste('~',., sep = '')
orderLevels <- 1:5
orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]%>%
paste('level',., sep='')%>%
paste(., collapse = '+')%>%
paste('~',., sep = '')
orderLevels
library(MarkovHC)
paste('level',c(1,2,3),sep = '')
library(MarkovHC)
library(dplyr)
library(car)
library(dplyr)
library(MASS)
library(MarkovHC)
library(ggplot2)
library(ggalluvial)
library(ggraph)
library(viridis)
library(stringr)
library(ggforce)
library(doBy)
library(alluvial)
load('F:/Projects/MarkovHC/results/simulationData/example3.RData')
labels <- fetchLabels(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
labels
unique(labels[,1])
sankeyResult_MarkovHC_3 <- sankeyResult(MarkovObject = MarkovHC_3,
MarkovLevels = 22:24)
basin <- vector(length = nrow(example3))
for (i in 1:length(basin)) {
indexi <- subset(sankeyResult_MarkovHC_3,sankeyResult_MarkovHC_3[,1]==i)
basin[i] <- paste(unique(indexi[,2])%>%sort(), collapse = '+')
}
basin
labels[,1]
as.character(labels[,1])
as.character(labels[,1])==basin
which((as.character(labels[,1])==basin)==FALSE)
basin <- vector(length = nrow(example3))
for (i in 1:length(basin)) {
indexi <- subset(sankeyResult_MarkovHC_3,sankeyResult_MarkovHC_3[,1]==i)
basin[i] <- paste(unique(indexi[,3])%>%sort(), collapse = '+')
}
which((as.character(labels[,2])==basin)==FALSE)
basin <- vector(length = nrow(example3))
for (i in 1:length(basin)) {
indexi <- subset(sankeyResult_MarkovHC_3,sankeyResult_MarkovHC_3[,1]==i)
basin[i] <- paste(unique(indexi[,4])%>%sort(), collapse = '+')
}
which((as.character(labels[,3])==basin)==FALSE)
test <- as.data.frame(matrix(0,5,3))
test
test[c(3,4),2]
paste(test[c(3,4),2],'+',1, sep='')
length(paste(test[c(3,4),2],'+',1, sep=''))
test[c(3,4),2] <- paste(test[c(3,4),2],'+',1, sep='')
test
test[c(3,4),2] <- paste(test[c(3,4),2],'+',2, sep='')
test
View(test)
load(('F:/Projects/MarkovHC/results/simulationData/example3.RData'))
#simulate data
library(dplyr)
library(car)
library(dplyr)
library(MASS)
library(MarkovHC)
library(ggplot2)
library(ggalluvial)
library(ggraph)
library(viridis)
library(stringr)
library(ggforce)
library(doBy)
library(alluvial)
labels1 <- fetchLabels(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,i] <- paste(result.dataframe[basinj,i],'+',i, sep='')
}
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels1)
head(labels2)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
result.dataframe_col <- result.dataframe_col+1
}
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
test <- matrix(NA, 3, 3)
test
test[1,1] <- 1
test
test[1,2] <- paste(1,test[1,2] , sep='')
test
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(label1)
head(labels1)
head(labels2)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
test <- matrix(
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
test <- matrix(
nrow = 3,
ncol = 3)
test
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
?chartr
chartr[old='0+',new='',x=labels2[,1]]
chartr[old='0+',new='',x=labels2[1,1]]
chartr(old='0+',new='',x=labels2[1,1])
gsub('0+','',labels2)
gsub('0+','',labels2[1,1])
label2s[1,2]
labels2[1,2]
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
labels2[1,2]
gsub('0+','',labels2[1,2])
gsub('0+','',labels2)
sub('0+', "", labels2[1,1])
sub('0\+', "", labels2[1,1])
sub('0/+', "", labels2[1,1])
sub('0+', "", labels2[1,1])
head(labels2)
class(labels2[1,1])
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
class(labels2[1,1])
sub('0+', "", labels2[1,1])
sub("0+", "", labels2[1,1])
sub("0+", " ", labels2[1,1])
sub("0+", "", labels2[1,1])
sub("0\\+", "", labels2[1,1])
sub("0\\+", "", labels2)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(NA,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
sub("0\\+", "", labels2[,1])
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
sub("0\\+", "", labels2[,1])
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
sub("0\\+", "", labels2[,1])
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
for (i in 1:ncol(result.dataframe)) {
result.dataframe[,i] <- sub("0\\+", "", result.dataframe[,i])
}
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels1 <- fetchLabels(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels1)
head(labels2)
all(labels1==labels2)
head(sankeyResult_MarkovHC_3)
all(labels1==labels2)
library(MarkovHC)
?adjustedRandIndex
??adjustedRandIndex
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
??orderBy
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
