orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]%>%
#orderLevels <- paste('level',orderLevels,sep='')
paste('level',sep='')%>%
paste(orderLevels, collapse = '+')
orderLevels
orderLevels <- 1:5
orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]
orderLevels
orderLevels <- paste('level',.,sep='')%>%
paste(., collapse = '+')%>%
paste('~',., sep = '')
orderLevels <- 1:5
orderLevels <- orderLevels[order(orderLevels, decreasing = TRUE)]%>%
paste('level',., sep='')%>%
paste(., collapse = '+')%>%
paste('~',., sep = '')
orderLevels
library(MarkovHC)
paste('level',c(1,2,3),sep = '')
library(MarkovHC)
library(dplyr)
library(car)
library(dplyr)
library(MASS)
library(MarkovHC)
library(ggplot2)
library(ggalluvial)
library(ggraph)
library(viridis)
library(stringr)
library(ggforce)
library(doBy)
library(alluvial)
load('F:/Projects/MarkovHC/results/simulationData/example3.RData')
labels <- fetchLabels(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
labels
unique(labels[,1])
sankeyResult_MarkovHC_3 <- sankeyResult(MarkovObject = MarkovHC_3,
MarkovLevels = 22:24)
basin <- vector(length = nrow(example3))
for (i in 1:length(basin)) {
indexi <- subset(sankeyResult_MarkovHC_3,sankeyResult_MarkovHC_3[,1]==i)
basin[i] <- paste(unique(indexi[,2])%>%sort(), collapse = '+')
}
basin
labels[,1]
as.character(labels[,1])
as.character(labels[,1])==basin
which((as.character(labels[,1])==basin)==FALSE)
basin <- vector(length = nrow(example3))
for (i in 1:length(basin)) {
indexi <- subset(sankeyResult_MarkovHC_3,sankeyResult_MarkovHC_3[,1]==i)
basin[i] <- paste(unique(indexi[,3])%>%sort(), collapse = '+')
}
which((as.character(labels[,2])==basin)==FALSE)
basin <- vector(length = nrow(example3))
for (i in 1:length(basin)) {
indexi <- subset(sankeyResult_MarkovHC_3,sankeyResult_MarkovHC_3[,1]==i)
basin[i] <- paste(unique(indexi[,4])%>%sort(), collapse = '+')
}
which((as.character(labels[,3])==basin)==FALSE)
test <- as.data.frame(matrix(0,5,3))
test
test[c(3,4),2]
paste(test[c(3,4),2],'+',1, sep='')
length(paste(test[c(3,4),2],'+',1, sep=''))
test[c(3,4),2] <- paste(test[c(3,4),2],'+',1, sep='')
test
test[c(3,4),2] <- paste(test[c(3,4),2],'+',2, sep='')
test
View(test)
load(('F:/Projects/MarkovHC/results/simulationData/example3.RData'))
#simulate data
library(dplyr)
library(car)
library(dplyr)
library(MASS)
library(MarkovHC)
library(ggplot2)
library(ggalluvial)
library(ggraph)
library(viridis)
library(stringr)
library(ggforce)
library(doBy)
library(alluvial)
labels1 <- fetchLabels(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,i] <- paste(result.dataframe[basinj,i],'+',i, sep='')
}
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels1)
head(labels2)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
result.dataframe_col <- result.dataframe_col+1
}
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
test <- matrix(NA, 3, 3)
test
test[1,1] <- 1
test
test[1,2] <- paste(1,test[1,2] , sep='')
test
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(label1)
head(labels1)
head(labels2)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
test <- matrix(
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
test <- matrix(
nrow = 3,
ncol = 3)
test
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
?chartr
chartr[old='0+',new='',x=labels2[,1]]
chartr[old='0+',new='',x=labels2[1,1]]
chartr(old='0+',new='',x=labels2[1,1])
gsub('0+','',labels2)
gsub('0+','',labels2[1,1])
label2s[1,2]
labels2[1,2]
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
labels2[1,2]
gsub('0+','',labels2[1,2])
gsub('0+','',labels2)
sub('0+', "", labels2[1,1])
sub('0\+', "", labels2[1,1])
sub('0/+', "", labels2[1,1])
sub('0+', "", labels2[1,1])
head(labels2)
class(labels2[1,1])
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
class(labels2[1,1])
sub('0+', "", labels2[1,1])
sub("0+", "", labels2[1,1])
sub("0+", " ", labels2[1,1])
sub("0+", "", labels2[1,1])
sub("0\\+", "", labels2[1,1])
sub("0\\+", "", labels2)
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(NA,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels2)
sub("0\\+", "", labels2[,1])
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
sub("0\\+", "", labels2[,1])
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
sub("0\\+", "", labels2[,1])
fetchLabels2 =function(MarkovObject=NULL,
MarkovLevels=NULL){
result.dataframe <- matrix(0,
nrow = nrow(MarkovObject[["midResults"]][["symmetric_KNN_graph"]]),
ncol = length(MarkovLevels))
result.dataframe_col <- 1
for (i in MarkovLevels) {
for (basin in 1:length(MarkovObject$hierarchicalStructure[[i]]$basinPoints)) {
basinj <- MarkovObject$hierarchicalStructure[[i]]$basinPoints[[basin]]
result.dataframe[basinj,result.dataframe_col] <- paste(result.dataframe[basinj,result.dataframe_col],'+',basin, sep='')
}
result.dataframe_col <- result.dataframe_col+1
}
result.dataframe <- as.data.frame(result.dataframe, stringsAsFactors=FALSE)
for (i in 1:ncol(result.dataframe)) {
result.dataframe[,i] <- sub("0\\+", "", result.dataframe[,i])
}
colnames(result.dataframe) <- paste('level',MarkovLevels,sep = '')
return(result.dataframe)
}
labels1 <- fetchLabels(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
labels2 <- fetchLabels2(MarkovObject=MarkovHC_3,
MarkovLevels=22:24)
head(labels1)
head(labels2)
all(labels1==labels2)
head(sankeyResult_MarkovHC_3)
all(labels1==labels2)
library(MarkovHC)
?adjustedRandIndex
??adjustedRandIndex
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
??orderBy
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
library(MarkovHC)
test =TRUE
test == TRUE
load('F:/Projects/MarkovHC/results/simulationData/example5.RData')
ls
ls()
head(example5)
scatter3d(x=example5[,1],
y=example5[,2],
z=example5[,3],
point.col='black',
pch = 21,
sphere.size=1,
surface=FALSE,
xlab = "X", ylab = "Y",
zlab = "Z", axis.scales = FALSE)
library(plot3D)
scatter3d(x=example5[,1],
y=example5[,2],
z=example5[,3],
point.col='black',
pch = 21,
sphere.size=1,
surface=FALSE,
xlab = "X", ylab = "Y",
zlab = "Z", axis.scales = FALSE)
library(dplyr)
library(car)
library(dplyr)
library(MASS)
library(ggplot2)
library(MarkovHC)
library(ggalluvial)
library(ggraph)
library(stringr)
library(ggforce)
library(alluvial)
library(rgl)
library(plot3D)
library(viridis)
library(doBy)
scatter3d(x=example5[,1],
y=example5[,2],
z=example5[,3],
point.col='black',
pch = 21,
sphere.size=1,
surface=FALSE,
xlab = "X", ylab = "Y",
zlab = "Z", axis.scales = FALSE)
3Dexample1 <- example5
scatter3d(x=example5[,1],
y=example5[,2],
z=example5[,3],
point.col='black',
pch = 21,
sphere.size=1,
surface=FALSE,
xlab = "X", ylab = "Y",
zlab = "Z", axis.scales = FALSE)
3Dexample1 <- example5
test <- example5
example_3D1 <- example5
usethis::use_data(example_3D1,overwrite = FALSE)
install.packages('usethis')
usethis::use_data(example_3D1,overwrite = FALSE)
load('F:/Projects/MarkovHC/results/simulationData/example4.RData')
scatter3d(x=example4[,1],
y=example4[,2],
z=example4[,3],
point.col='black',
pch = 21,
sphere.size=2,
surface=FALSE,
xlab = "X", ylab = "Y",
zlab = "Z", axis.scales = FALSE)
example_3D2 <- example4
usethis::use_data(example_3D2,overwrite = FALSE)
load('F:/Projects/MarkovHC/results/simulationData/example3.RData')
plot(example3)
load('F:/Projects/MarkovHC/results/simulationData/example6.RData')
p <- ggplot(layout, aes(x = V1, y = V2)) +
geom_point(size=0.1)
p1 <- p + geom_density_2d(n=100,
h=c(3,3),
linemitre=5,
lineend='round',
linejoin = 'round',
colour = alpha('black', 0.5),
size = 0.1,
bins = 50)
p1 + stat_density_2d(aes(fill = stat(level)), geom = "polygon",
h=3,
bins = 50,contour=TRUE,alpha=0.001
)+scale_fill_gradientn(colours=c(alpha("#252525",0.001)))+mytheme+ theme(legend.position = "none")
example_2D1 <- example6
usethis::use_data(example_2D1,overwrite = FALSE)
plot(example_2D1)
save.image('F:/Projects/MarkovHC/results/simulationData/helix.RData')
data("helix_data")
plot(helix_data)
load('F:/Projects/MarkovHC/results/TransitionAndPath/TransitionAndPath.RData')
PATHobject
usethis::use_data(PATHobject,overwrite = FALSE)
splatter_mat <- mat2
usethis::use_data(splatter_mat,overwrite = FALSE)
dim(splatter_mat)
#The sequence of C_cut
load('F:/Projects/MarkovHC/results/GSE75748/GSE75748.RData')
GSE75748 <- data
dim(GSE75748)
usethis::use_data(GSE75748,overwrite = FALSE)
library(Rtsne)
library(ggplot2)
library(MarkovHC)
library(stringr)
library(Seurat)
library(reticulate)
library(ggalluvial)
library(plyr)
library(pheatmap)
library(car)
library(dplyr)
library(phateR)
library(clusterProfiler)
library(org.Mm.eg.db)
library(stringr)
library(ggraph)
options(stringsAsFactors = F)
data <- read.csv(file = "F:/Projects/MarkovHC/data/GSE75748/GSE75748_sc_cell_type_ec.csv",
header = T,
row.names = 1)
genelist <- read.table(file = "F:/Projects/MarkovHC/data/GSE75748/13059_2016_1033_MOESM2_ESM.txt", header = T)
celltypeconvert <- read.csv(file = 'F:/Projects/MarkovHC/data/GSE75748/celltypeconvert.csv', header = F)
reallabel <- colnames(data)%>%as.data.frame()
colnames(reallabel) <- 'V1'
for (i in 1:nrow(reallabel)) {
reallabel[i,1] <- str_split(reallabel[i,1], '_')[[1]][1]
}
reallabel <- merge(reallabel, celltypeconvert, by = 'V1', sort = FALSE)
reallabel
usethis::use_data(reallabel)
