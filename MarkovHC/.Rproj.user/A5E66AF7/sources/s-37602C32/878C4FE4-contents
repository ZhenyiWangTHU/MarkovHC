library(MarkovHC)
library(Seurat)
library(ggplot2)
TPM <- read.table(file = 'F:/Projects/MarkovHC/data/Taotan/TPM.gene.matrix.txt')
TPM <- TPM[-which((rowSums(TPM)==0)==T),]
var_mean <- cbind(apply(log(TPM+1), 1, mean), apply(log(TPM+1), 1, var))
plot(var_mean)
TPM <- TPM[(var_mean[,1]>2)&(var_mean[,2]>2),]
TPM <- unique(TPM)
#TPM <- log(1+TPM)

tsneResult <- Rtsne::Rtsne(t(TPM), perplexity=15)
ggplot(data=as.data.frame(tsneResult$Y), mapping =  aes(x=V1, y=V2)) + geom_point(size=1)+
  theme(panel.grid.major =element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank(),axis.line = element_line(colour = "black"))

TPM_pca <- prcomp(t(TPM), scale = TRUE)
TPM_pca_x <- as.data.frame(TPM_pca$x)
ggplot(data=as.data.frame(TPM_pca_x), mapping =  aes(x=PC1, y=PC2))+ geom_point(size=1)+
  theme(panel.grid.major =element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank(),axis.line = element_line(colour = "black"))

TPM.Result <- MarkovHC(origin_matrix=TPM,
                      transformtype="none",
                      KNN=20,
                      basecluster="kmeans",
                      dobasecluster=FALSE,
                      baseclusternum=200,
                      emphasizedistance=1,
                      weightDist=2,
                      weightDens=0.5,
                      cutpoint=0.01,
                      showprocess=FALSE,
                      bn=2,
                      minBasinSize=0.2,
                      noiseBasinSize=2)

label <- integer(ncol(TPM))
pointscount <- c()
for (i in 1:length(TPM.Result$hierarchicalStructure$level8$basinPoints)) {
  label[TPM.Result$hierarchicalStructure$level8$basinPoints[[i]]] <- i
  pointscount <- c(pointscount, TPM.Result$hierarchicalStructure$level8$basinPoints[[i]])%>%unique()
}

TPM.sankeyResult <- sankeyResult(MarkovObject = TPM.Result, MarkovLevels = c(1,3,8,10,12))
TPM.sankeyResult[,4] <- paste('level8_basin',TPM.sankeyResult[,4],sep='')
TPM.sankeyResult[,5] <- paste('level10_basin',TPM.sankeyResult[,5],sep='')
TPM.sankeyResult[,6] <- paste('level12_basin',TPM.sankeyResult[,6],sep='')
TPM.sankeyResult$Freq <- rep(1, nrow(TPM.sankeyResult))
colorvector <- c("level8_basin1"="#7fc97f",
                 "level8_basin2"="#beaed4",
                 "level8_basin3"="#fdc086",
                 "level8_basin4"="#fdc086",
                 "level8_basin5"="#386cb0",
                 "level8_basin6"="#f0027f",
                 "level8_basin7"="#bf5b17")
colorvector <- c("level10_basin1"="#7fc97f",
                 "level10_basin2"="#beaed4",
                 "level10_basin3"="#ffff99")
ggplot(TPM.sankeyResult,
       aes(y=Freq,axis1 = level1, axis2=level8, axis3=level10, axis4=level12)) +
  geom_alluvium(aes(fill = level8, color = level8),
                width = 1/20, alpha = 0.7, knot.pos = 1/3,reverse = T) +
  geom_stratum(width = 1/3,reverse =T,alpha = 1,
               fill = c(rep('white',48),colorvector%>%rev(),rep('white',4)),
               color = 'black') +
  geom_label(stat = "stratum", label.strata = TRUE) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 15, face = "plain")
  )+scale_x_continuous(breaks = 1:4, labels = c("level1", "level8",'level10', 'level12'))+
 scale_fill_manual(values  = colorvector) +
 scale_color_manual(values = colorvector)

dataframe.TPM <- as.data.frame(tsneResult$Y)
label <- paste("level8_basin",label,sep='')
dataframe.TPM$label <- factor(label)
ggplot(data = as.data.frame(dataframe.TPM), aes(x=V1,y=V2,color=label))+geom_point(size=3)+
  scale_color_manual(values = colorvector)+theme(panel.grid.major =element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank(),axis.line = element_line(colour = "black"))


#plot(TPM.Result$midResults$sNN_res, as.data.frame(dataframe.TPM[,c(1,2)]))




