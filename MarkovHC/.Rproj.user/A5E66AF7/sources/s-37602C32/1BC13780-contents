setwd("F:/Projects/MarkovHC/results/Cytof")
library(spade)
library(flowCore)
library(Rtsne)
library(ggplot2)
library(MarkovHC)
library(RColorBrewer)
library(pheatmap)
SPADEDATASET_2 <- SPADE.read.FCS(file = "F:/Projects/MarkovHC/data/Cytof/Supplementary Data 2.fcs")
#CD <- SPADEDATASET_2@parameters@data
SPADEDATASET_2 <- exprs(SPADEDATASET_2)
SPADEDATASET_2 <- as.data.frame(SPADEDATASET_2)
freq <- as.data.frame(table(SPADEDATASET_2[,"type"]),stringsAsFactors = F)
typedata_1 <- subset(SPADEDATASET_2, SPADEDATASET_2[,"type"]==1)
type1_index <- sample(nrow(typedata_1), size = ceiling((freq[1,2]/148076)*10000))
sampleddata <- typedata_1[type1_index,]
for (i in 2:24) {
  a <- subset(SPADEDATASET_2, SPADEDATASET_2[,"type"]==i)
  a_index <- sample(nrow(a), size = ceiling((freq[i,2]/148076)*10000))
  a <- a[a_index, ]
  sampleddata <- rbind(sampleddata, a)
}
sampleddata <- as.data.frame(sampleddata,stringsAsFactors = F)
label <- sampleddata[,"type"]
sampleddata <- as.data.frame(sampleddata[,3:40],stringsAsFactors = F)
dulicaterows <- which(duplicated(sampleddata)==T)
sampleddata <- sampleddata[-dulicaterows,]
label <- label[-dulicaterows]
label <- as.factor(as.vector(label))
label_data_frame <- as.data.frame(label, stringsAsFactors=F)
colnames(label_data_frame) <-"type"
label_mannual <- read.csv(file = "F:/Projects/MarkovHC/data/Cytof/label.csv")
#using merge should be careful
label_data_frame <- merge(label_data_frame, label_mannual, by="type", all=T, sort = F)
MarkovHC_cytof <- MarkovHC(origin_matrix=t(sampleddata),
                           transformtype="arsinh",
                           KNN=30,
                           basecluster="kmeans",
                           dobasecluster=TRUE,
                           baseclusternum=200,
                           emphasizedistance=1,
                           weightDist=2,
                           weightDens=0.5,
                           cutpoint=0.01,
                           showprocess=FALSE,
                           bn=2)
#tsne-------------------------------------------------------------------------
sample_tsne <- Rtsne::Rtsne(asinh(sampleddata))
sample_tsne_xy <- as.data.frame(sample_tsne$Y)
label <- integer(nrow(sampleddata))
pointscount <- c()
for (i in 1:length(MarkovHC_cytof$hierarchicalStructure$level21$basinPoints)) {
  label[MarkovHC_cytof$hierarchicalStructure$level21$basinPoints[[i]]] <- i
  pointscount <- c(pointscount, MarkovHC_cytof$hierarchicalStructure$level21$basinPoints[[i]])%>%unique()
}
length(pointscount)
ggplot(data=sample_tsne_xy, mapping =  aes(x=V1, y=V2, color=factor(label))) + geom_point(size=1)
#+theme(legend.position = 'none')
ggplot(data=sample_tsne_xy, mapping =  aes(x=V1, y=V2, color=factor(label_data_frame[,2]))) + geom_point(size=1)
plot(MarkovHC_cytof$midResults$sNN_res, sample_tsne_xy)

ggplot(data=sample_tsne_xy, mapping =  aes(x=V1, y=V2, color=MarkovHC_cytof$midResults$centrality_scores)) + geom_point(size=1)





mycol <- c("black","darkorchid4","darkorange4","darkolivegreen4","darkmagenta",
           "darkgreen","cyan4","coral4","blue4","goldenrod4",
           "deeppink4", "hotpink4","lightsalmon4","maroon4","turquoise",
           "thistle4", "steelblue4","slategray4", "slateblue4","red2",
           "purple4", "yellow4", "wheat4", "plum2","darkred")
levelPlot <- function(data, level, endresult, layout){
  label <- convert_2_label(endresult = endresult, origin_datatable = data, level = level)
  label <- force_transform(label)
  label <- as.data.frame(label)
  for (i in 1:nrow(label)) {
    label[i,1] <- as.character(paste("cluster",label[i,1]))
  }
  ggplot(data=layout, mapping =  aes(x=V1, y=V2, color=label[,1])) + geom_point(size=1)
}
levelPlot(data = sampleddata, level = 41, endresult = cytofResult, layout = sample_tsne_xy)

label_2 <- convert_2_label(endresult = cytofResult, origin_datatable = sampleddata, level = 46)
label_2 <- force_transform(label_2)
label_2 <- as.data.frame(label_2)
cluster <-as.character(unique(label_2[,1]))
for (i in 1:length(cluster)) {
  subtype <- subset(sample_tsne_xy, label_2[,1]==cluster[i])
  jpeg(filename = as.character(paste("F:/MHC/newversion analysis/TSNE/TSNEresult_",as.character(cluster[i]),".png")),width = 1000, height = 1000)
  print(ggplot(data=subtype, mapping = aes(x=V1, y=V2)) + geom_point(size=2)+xlim(min(sample_tsne_xy[,1]), max(sample_tsne_xy[,1]))+
          ylim(min(sample_tsne_xy[,2]), max(sample_tsne_xy[,2])))
  dev.off()
}

ratio <- as.vector(1:length(cytofResult[["nbig"]]))
for (i in 1:length(cytofResult[["nbig"]])) {
  getLabel <- get_label(endresult = cytofResult, origin_datatable = sampleddata, level = i)
  label_vector <- as.data.frame(getLabel$label_vector)
  ratio[i] <- length(which(label_vector[,1]!=-2))/nrow(label_vector)
}
ratioOflevel <- as.data.frame(ratio)
ratioOflevel$level <- 1:length(ratio)
#ratioOflevel <- ratioOflevel[-which(is.na(ratioOflevel[,"ratio"])),]
ggplot(ratioOflevel, aes(x=level, y=ratio)) + geom_line(linetype="solid",size=1)+geom_point(size=4, shape=20)+
  theme(axis.text.x = element_text(size=15), axis.text.y = element_text(size=15),
        axis.title.x = element_text(size = 20), axis.title.y = element_text(size = 20))+xlab("level")+ylab("ratio")

#real label
ggplot(data=sample_tsne_xy, mapping =  aes(x=V1, y=V2, color=label_data_frame[,2])) + geom_point(size=1)
for (i in 1:nrow(label_mannual)) {
  subtype <- subset(sample_tsne_xy, label_data_frame[,2]==label_mannual[i,2])
  jpeg(filename = as.character(paste("F:/MHC/newversion analysis/TSNE/TSNEresult_",as.character(label_mannual[i,2]),".jpg", sep = "")),width = 1000, height = 1000)
  print(ggplot(data=subtype, mapping = aes(x=V1, y=V2)) + geom_point(size=2)+xlim(min(sample_tsne_xy[,1]), max(sample_tsne_xy[,1]))+
          ylim(min(sample_tsne_xy[,2]), max(sample_tsne_xy[,2])))
  dev.off()
}
#use number label
for (i in 1:24) {
  subtype <- subset(sample_tsne_xy, as.data.frame(label)[,1]==i)
  jpeg(filename = as.character(paste("F:/MHC/newversion analysis/TSNE/test/TSNEresult_",as.character(i),".jpg", sep = "")),width = 1000, height = 1000)
  print(ggplot(data=subtype, mapping = aes(x=V1, y=V2)) + geom_point(size=2)+xlim(min(sample_tsne_xy[,1]), max(sample_tsne_xy[,1]))+
          ylim(min(sample_tsne_xy[,2]), max(sample_tsne_xy[,2])))
  dev.off()
}

#select platenet
label_2 <- convert_2_label(endresult = cytofResult, origin_datatable = sampleddata, level = 42)
label_2 <- force_transform(label_2)
label_2 <- as.data.frame(label_2)
cluster <-as.character(unique(label_2[,1]))
for (i in 1:length(cluster)) {
  subtype <- subset(sample_tsne_xy, label_2[,1]==cluster[i])
  jpeg(filename = as.character(paste("C:/Users/Raytine/Desktop/cytof/TSNEresult_",as.character(cluster[i]),".png")),width = 1000, height = 1000)
  print(ggplot(data=subtype, mapping = aes(x=V1, y=V2)) + geom_point(size=2)+xlim(min(sample_tsne_xy[,1]), max(sample_tsne_xy[,1]))+
          ylim(min(sample_tsne_xy[,2]), max(sample_tsne_xy[,2])))
  dev.off()
}
isotope <- colnames(sampleddata)
SPADEDATASET_2 <- SPADE.read.FCS(file = "Supplementary Data 2.fcs")
CD <- SPADEDATASET_2@parameters@data
for (i in 1:ncol(sampleddata)){
  for (j in 1:nrow(CD)) {
    if(isotope[i]==CD[j,1]){isotope[i]<- CD[j,2]}
  }
}
colnames(sampleddata) <- isotope
sampleddata <- sampleddata[,c("191-DNA","193-DNA","174-pSrcFK","115-CD45",
                              "110-CD3","111-CD3","112-CD3","114-CD3","139-CD45RA",
                              "141-pPLCgamma2","142-CD19", "144-CD11b","145-CD4",
                              "146-CD8","148-CD34","150-pSTAT5","147-CD20","152-Ki67",
                              "154-pSHP2","151-pERK1/2","153-pMAPKAPK2","156-pZAP70/Syk",
                              "158-CD33","160-CD123","159-pSTAT3","164-pSLP-76","165-pNFkB",
                              "166-IkBalpha","167-CD38","168-pH3","170-CD90","169-pP38",
                              "171-pBtk/Itk","172-pS6","103-Viability","176-pCREB","175-pCrkL","110_114-CD3")]
cluster_1 <- subset(sampleddata, label_2[,1]==1)
cluster_7 <- subset(sampleddata, label_2[,1]==7)
cluster_25 <- subset(sampleddata, label_2[,1]==25)
cluster_29 <- subset(sampleddata, label_2[,1]==29)
pheatmap(cluster_1,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
pheatmap(cluster_7,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
pheatmap(cluster_25,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
pheatmap(cluster_29,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
#CD8T
CD8T <- subset(sampleddata, label==12|label==18)
CD8T_tsne <- subset(sample_tsne_xy, label==12|label==18)
ggplot(data=CD8T_tsne, mapping =  aes(x=V1, y=V2)) + geom_point(size=1)
CD8T_tsne_only <- Rtsne::Rtsne(asinh(CD8T))
CD8T_tsne_only_layout <- as.data.frame(CD8T_tsne_only$Y)
labelCD8T <- as.data.frame(subset(label_2[,1], label==12|label==18))
for (i in 1:nrow(labelCD8T)) {
  labelCD8T[i,1] <- as.character(paste("cluster",labelCD8T[i,1]))
}
ggplot(data=CD8T_tsne_only_layout, mapping =  aes(x=V1, y=V2, color=labelCD8T[,1])) + geom_point(size=1)
pheatmap(CD8T,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
cluster <- unique(labelCD8T[,1])
for (i in 1:length(cluster)) {
  subtype <- subset(CD8T_tsne_only_layout, labelCD8T[,1]==cluster[i])
  jpeg(filename = as.character(paste("C:/Users/Raytine/Desktop/CD8T/TSNEresult_",as.character(cluster[i]),".png")),width = 1000, height = 1000)
  print(ggplot(data=subtype, mapping = aes(x=V1, y=V2)) + geom_point(size=2)+xlim(min(sample_tsne_xy[,1]), max(sample_tsne_xy[,1]))+
          ylim(min(sample_tsne_xy[,2]), max(sample_tsne_xy[,2])))
  dev.off()
}
pheatmap(subset(CD8T, labelCD8T[,1]=="cluster 14"),color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
pheatmap(subset(CD8T, labelCD8T[,1]=="cluster 17"),color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
pheatmap(subset(CD8T, labelCD8T[,1]=="cluster 40"),color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
CD8TM <- subset(sampleddata, label==12)
cD8TN <- subset(sampleddata, label==18)
pheatmap(CD8TM,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")
pheatmap(cD8TN,color = colorRampPalette(c("navy", "white", "firebrick3"))(50), cluster_rows=TRUE, show_rownames=F,
         cluster_cols=F, show_colnames = T, scale = "row")









